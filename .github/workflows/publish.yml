name: Release Pipeline

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New engine version. If empty, run number will be used and no commit/tag/release will be created'
        default: ''
        required: false
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: GrandChessTree.Client
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 9.0.x

      # Get the version from the .csproj file
      - name: Get .NET application version
        if: github.event.inputs.version != ''
        working-directory: GrandChessTree.Client
        id: get_version
        run: |
          VERSION=0.0.2
          echo "Application version: $VERSION"
          echo "::set-output name=version::$VERSION"

      - name: Build and Package for Windows
        run: |
          dotnet restore
          dotnet publish -c Release -r win-x64 --self-contained /p:PublishSingleFile=true /p:PublishTrimmed=true /p:EnableCompressionInSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true -o ../output/win-x64
          
      - name: Build and Package for Linux
        run: |
          dotnet restore
          dotnet publish -c Release -r linux-x64 --self-contained /p:PublishSingleFile=true /p:PublishTrimmed=true /p:EnableCompressionInSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true -o ../output/linux-x64

      - name: Build and Package for OSX
        run: |
          dotnet restore
          dotnet publish -c Release -r osx-x64 --self-contained /p:PublishSingleFile=true /p:PublishTrimmed=true /p:EnableCompressionInSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true -o ../output/osx-x64

      # Rename the output files for consistency
      - name: Rename output files
        run: |
          mv ../output/win-x64/GrandChessTree.Client.exe ../output/GrandChessTree_win_x64.exe
          mv ../output/linux-x64/GrandChessTree.Client ../output/GrandChessTree_linux_x64
          mv ../output/osx-x64/GrandChessTree.Client ../output/GrandChessTree_osx_x64

      # List files in output directory to verify they exist
      - name: Verify output files
        run: |
          ls -R ../output

      # Generate release tag based on version
      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::GrandChessTree-${{ steps.get_version.outputs.version }}"

      # Create a single release with all artifacts
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: |
            ${{ github.workspace }}/output/GrandChessTree_win_x64.exe
            ${{ github.workspace }}/output/GrandChessTree_linux_x64
            ${{ github.workspace }}/output/GrandChessTree_osx_x64
